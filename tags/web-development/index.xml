<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Web development | Alexander Garbiak</title>
    <link>https://agarbiak.github.io/tags/web-development/</link>
      <atom:link href="https://agarbiak.github.io/tags/web-development/index.xml" rel="self" type="application/rss+xml" />
    <description>Web development</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><copyright>Â© 2020 Alexander Garbiak</copyright><lastBuildDate>Sun, 26 Apr 2020 13:54:43 +0100</lastBuildDate>
    <image>
      <url>img/map[gravatar:%!s(bool=false) shape:circle]</url>
      <title>Web development</title>
      <link>https://agarbiak.github.io/tags/web-development/</link>
    </image>
    
    <item>
      <title>Pub Quiz</title>
      <link>https://agarbiak.github.io/project/pub-quiz/</link>
      <pubDate>Sun, 26 Apr 2020 13:54:43 +0100</pubDate>
      <guid>https://agarbiak.github.io/project/pub-quiz/</guid>
      <description>&lt;p&gt;Currently under development - please read my blog 

&lt;a href=&#34;https://agarbiak.github.io/post/pub-quiz-idea/&#34;&gt;post&lt;/a&gt; about this.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Guess the TV theme tune!&lt;/p&gt;

&lt;canvas id=&#34;myCanvas&#34; width=&#34;200&#34; height=&#34;100&#34;&gt;&lt;/canvas&gt;

&lt;audio id=&#34;pubAudio&#34; controls&gt;
    &lt;source src=&#34;&#34; type=&#34;audio/mpeg&#34;&gt;
    Your browser does not support mp3 audio files.
&lt;/audio&gt;

&lt;script src=&#34;https://agarbiak.github.io/js/pubquiz.js&#34;&gt;&lt;/script&gt;
&lt;hr&gt;
</description>
    </item>
    
    <item>
      <title>The Garbiak Pub Quiz</title>
      <link>https://agarbiak.github.io/post/pub-quiz-idea/</link>
      <pubDate>Sun, 26 Apr 2020 11:40:14 +0100</pubDate>
      <guid>https://agarbiak.github.io/post/pub-quiz-idea/</guid>
      <description>&lt;h2 id=&#34;background&#34;&gt;Background&lt;/h2&gt;
&lt;p&gt;A random idea popped into my head that it would be fun to try to create a pub quiz app. Pre-made quizzes are fun (with 

&lt;a href=&#34;https://www.sporcle.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Sporcle&lt;/a&gt; being a good example) but I wanted to try to create my own. Quizzes are easy to create but hard to be fun. So here goes my attempt at building a pub quiz application using &lt;code&gt;JavaScript&lt;/code&gt; so I can host it on my own website.&lt;/p&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Why a &lt;em&gt;pub&lt;/em&gt; quiz? I am not sure. It just sounded better than &amp;ldquo;&lt;em&gt;quiz&lt;/em&gt;&amp;quot;.&lt;br&gt;
Marketing, I suppose.
  &lt;/div&gt;
&lt;/div&gt;
&lt;h2 id=&#34;the-plan&#34;&gt;The Plan&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;&lt;em&gt;Fail to plan&lt;/em&gt; $\implies$ &lt;em&gt;Plan to fail&lt;/em&gt;&amp;rdquo;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;With this in mind, here is my plan:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Learn some Javascript - this seems to be the most efficient way to run the application on my website,&lt;/li&gt;
&lt;li&gt;Develop the pub quiz design - what is the theme, the aesthetic, format, etc. of the quiz going to be?&lt;/li&gt;
&lt;li&gt;Create pub quiz assets - I envisage this will be the most time consuming step depending on the design. I will use Audacity to capture sound clips for instance. I&amp;rsquo;m undecided on other asset types - images, video clips, maps, quotes or even just multi-choice questions are all possible.&lt;/li&gt;
&lt;li&gt;Enhance the pub quiz application - metadata could be captured to create custom made quizes. An example would involve tagging actor names such that you could have an entire round on, say, Arnie films.&lt;/li&gt;
&lt;li&gt;Explore added features - a database backend to collect statistics and allow registration of users who could compete on high scores. Yes, probably too ambitious, hence an added (nice-to-have) feature to be developed at a much later stage (if ever).&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;A couple of concerns:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Copyright - the sound assets are from copyrighted materials. I tried to read some Copyright law but quickly noted I was falling trap to 

&lt;a href=&#34;https://stackify.com/premature-optimization-evil/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;premature optimisation&lt;/a&gt;, my usual mistake (as originally pointed 

&lt;a href=&#34;https://agarbiak.github.io/post/building-this-site/&#34;&gt;here&lt;/a&gt;). For now my argument is fair use which YouTube summarises 

&lt;a href=&#34;https://www.youtube.com/about/copyright/fair-use/#yt-copyright-four-factors&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;here&lt;/a&gt; albeit from a US legal standpoint. The sound assets are short clips (vast majority less than 15 seconds long) and my website is free to use.&lt;/li&gt;
&lt;li&gt;GitHub capacity - this website is hosted on GitHub as I&amp;rsquo;m too cheap to pay for my own hosting (although it would be nice to have my own URL). I wonder what the bandwidth that GitHub offers before they quietly ask me for some money to upgrade to a paid plan? Again, I will ignore this for now to avoid 

&lt;a href=&#34;https://stackify.com/premature-optimization-evil/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;premature optimisation&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Public nature - this website is open to anyone to visit. Some of the sound clips I have created contain strong language only suitable for adults (you know, a lot of good films are 18+ rated). I certainly do not want to have kids listening to this. I have no mechanism to control this and do not have time to investigate how to solve this problem. My initial thought is to include a consent pop-up window to confirm you are over 18. Another thought is to ensure all content is kid friendly.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;current-status&#34;&gt;Current Status&lt;/h2&gt;
&lt;p&gt;The current (envisaged) status of the project:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt;Learn some &lt;code&gt;JavaScript&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt;Develop pub quiz design&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt;Create some pub quiz assets&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt;Capture metadata on pub quiz assets&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt;Launch alpha application&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt;Debug the horrible mess of an alpha application&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt;Deploy beta application for external testing to select users&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt;Crush the ridiculous bugs in the beta application to refine&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt;Launch the first release product&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt;Elicit feedback from end users&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt;Develop new requested features &lt;strong&gt;or&lt;/strong&gt; give up and move onto something else&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;project-log&#34;&gt;Project Log&lt;/h2&gt;
&lt;p&gt;Below I sketch out the development over time. I understand this concept of typing out a project log is a bit outdated - there are tools out there to automate changelog generation but I&amp;rsquo;m too lazy to research this further.&lt;/p&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;Day 1 - 26 April, 2020&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Not really day one so to speak as I&amp;rsquo;ve created some pub quiz assets already.&lt;/p&gt;
&lt;p&gt;I downloaded 

&lt;a href=&#34;https://www.audacityteam.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Audacity&lt;/a&gt; to create the sound clips. A few notes on my use of Audacity:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;I am currently on a Windows 10 machine. In Audacity I changed the settings to &lt;em&gt;Windows WASAPI&lt;/em&gt;. This allows you to re-route the sound output as a microphone to record sounds.&lt;/li&gt;
&lt;li&gt;I experimented with a couple of settings:
&lt;ul&gt;
&lt;li&gt;Generate -&amp;gt; Tone: Can add a &amp;ldquo;bleep&amp;rdquo; type sound effect using a sine wave,&lt;/li&gt;
&lt;li&gt;Effect -&amp;gt; Amplify: Can either amplify or quieten a sound clip using this effect,&lt;/li&gt;
&lt;li&gt;Effect -&amp;gt; Vocal Reduction and Isolation: Occassionally I wanted to isolate the vocals from a music background heavy scene although I&amp;rsquo;ve found that the settings in this effect require finesse (which I do not possess) to make the clip sound passable afterwards.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;I did not have the patience to work on anything else in Audacity. To save the clips I just exported as &lt;em&gt;MP3&lt;/em&gt; files
There are a lot more features to Audacity but as a simple tool for this workflow it&amp;rsquo;s worked great and even a dummy like me had a semi-efficient process up and running quickly. Amazing software considering it is open source and free.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I also created this blog post to explain the idea and the plan to build it out into reality.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Day 2 - 30 April, 2020&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I have now learnt how to embed &lt;code&gt;HTML&lt;/code&gt; into my markdown files by using the in-built Hugo 

&lt;a href=&#34;https://gohugo.io/content-management/shortcodes/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;shortcode&lt;/a&gt; functionality. Within the &lt;code&gt;HTML&lt;/code&gt; file I can reference this to an external &lt;code&gt;JavaScript&lt;/code&gt; file (hosted in the static folder at the root directory).&lt;/p&gt;
&lt;p&gt;&lt;code&gt;HTML&lt;/code&gt; code:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;!-- demo canvas shortcode --&amp;gt;
&amp;lt;canvas id=&amp;quot;demoCanvas&amp;quot; width=&amp;quot;170&amp;quot; height=&amp;quot;120&amp;quot; style=&amp;quot;border:1px solid #000000;&amp;quot;&amp;gt;
    A HTML canvas with width 170 and height 120 with a small black border filled in with a blue rectangle by calling an external JavaScript file.
&amp;lt;/canvas&amp;gt;
&amp;lt;script src=&amp;quot;/js/democanvas.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Note that anything written between the &lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt; tag is not rendered if the user&amp;rsquo;s browser supports the &lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt; tag. This is explained 

&lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/API/Canvas_API/Tutorial/Hit_regions_and_accessibility&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;here&lt;/a&gt; in more detail.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;JavaScript&lt;/code&gt; code:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;const canvas = document.getElementById(&#39;demoCanvas&#39;);
const ctx = canvas.getContext(&#39;2d&#39;);

ctx.fillStyle = &#39;blue&#39;;
// (x postion, y postion, width, height)
ctx.fillRect(10, 10, 150, 100);
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This generates the following output:&lt;/p&gt;

&lt;canvas id=&#34;demoCanvas&#34; width=&#34;170&#34; height=&#34;120&#34; style=&#34;border:1px solid #000000;&#34;&gt;
    A HTML canvas with width 170 and height 120 with a small black border filled in with a blue rectangle by calling an external javascript file.
&lt;/canvas&gt;
&lt;script src=&#34;https://agarbiak.github.io/js/democanvas.js&#34;&gt;&lt;/script&gt;
&lt;p&gt;Basic but you have to start &lt;strong&gt;somewhere&lt;/strong&gt;. ð&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Day 3 - 06 May, 2020&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Found a very helpful 

&lt;a href=&#34;https://github.com/jamesqquick/Build-A-Quiz-App-With-HTML-CSS-and-JavaScript&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;GitHub repo&lt;/a&gt; and tutorial series to build a quiz app&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Learnt new shortcuts in VS Code for faster HTML prototyping (&lt;code&gt;$&lt;/code&gt; and &lt;code&gt;.&lt;/code&gt; commands for &lt;strong&gt;id&lt;/strong&gt; and &lt;strong&gt;class&lt;/strong&gt; attributes respectively)&lt;/li&gt;
&lt;li&gt;Learnt the key concept in &lt;code&gt;CSS&lt;/code&gt; is the box model (and that margins are collapsible)&lt;/li&gt;
&lt;li&gt;Was overwhelmed by &lt;code&gt;JavaScript&lt;/code&gt; with an array of new topics:
&lt;ul&gt;
&lt;li&gt;

&lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/Arrow_functions&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Arrow&lt;/a&gt; functions&lt;/li&gt;
&lt;li&gt;

&lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;map&lt;/a&gt; function&lt;/li&gt;
&lt;li&gt;The 

&lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Promise&lt;/a&gt; object&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Started to get to grips with JSON as a data structure&lt;/li&gt;
&lt;li&gt;You can fetch the external &lt;code&gt;JavaScript&lt;/code&gt; file within the &lt;strong&gt;&amp;lt;head&amp;gt;&lt;/strong&gt; element without page loading performance issues by using the &lt;strong&gt;defer&lt;/strong&gt; attribute in the &lt;strong&gt;&amp;lt;script&amp;gt;&lt;/strong&gt; tag.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Fixed the trailing whitespace &amp;ldquo;bug&amp;rdquo; when rendering markdown into HTML for URLs (see 

&lt;a href=&#34;https://discourse.gohugo.io/t/white-space-issue-in-markdown/25258/11&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;this&lt;/a&gt; discourse post for the fix and 

&lt;a href=&#34;https://bwaycer.github.io/hugo_tutorial.hugo/themes/customizing/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;this&lt;/a&gt; blog post for how to overwrite theme template files (I use the 

&lt;a href=&#34;https://sourcethemes.com/academic/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Academic theme&lt;/a&gt;). However it looks like whitespace can still be rendered &lt;em&gt;prior to&lt;/em&gt; the link if there is punctation immediately before - for example:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;([Sporcle](&lt;a href=&#34;https://www.sporcle.com/&#34;&gt;https://www.sporcle.com/&lt;/a&gt;)&lt;/em&gt; renders as&lt;/li&gt;
&lt;li&gt;(

&lt;a href=&#34;https://www.sporcle.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Sporcle&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>How I built this website</title>
      <link>https://agarbiak.github.io/post/building-this-site/</link>
      <pubDate>Fri, 31 Jan 2020 23:12:01 +0000</pubDate>
      <guid>https://agarbiak.github.io/post/building-this-site/</guid>
      <description>&lt;div class=&#34;alert alert-warning&#34;&gt;
  &lt;div&gt;
    This post is not yet complete and perhaps never will be. I suffer from &lt;a href=&#34;https://stackify.com/premature-optimization-evil/&#34;&gt;premature optimisation&lt;/a&gt; and so I have posted this as-is. To prove this point - consider the last updated date and look at the &lt;a href=&#34;https://github.com/agarbiak/agarbiak.github.io&#34;&gt;Github repo&lt;/a&gt; for a history of this page.
  &lt;/div&gt;
&lt;/div&gt;
&lt;h1 id=&#34;tldrhttpsenwikipediaorgwikiwikipediatoo_long_didn27t_read&#34;&gt;

&lt;a href=&#34;https://en.wikipedia.org/wiki/Wikipedia:Too_long;_didn%27t_read&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;TL;DR&lt;/a&gt;&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Caught inspiration to give this a try after reading some documentation from 

&lt;a href=&#34;https://bookdown.org/yihui/blogdown/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;blogdown&lt;/a&gt;,&lt;/li&gt;
&lt;li&gt;A fair amount of trial and error using 

&lt;a href=&#34;https://gohugo.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Hugo&lt;/a&gt;, and,&lt;/li&gt;
&lt;li&gt;Plenty of frustration (aka debugging).&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;the-inspiration-for-this-site&#34;&gt;The inspiration for this site&lt;/h2&gt;
&lt;p&gt;The truth is the motivation of building this website was my personal justification as an alternative study method. The idea was that I would write &lt;code&gt;Rmarkdown&lt;/code&gt; posts about actuarial science (within the general insurance domain) featuring modelling results on theoretical concepts required to be learnt as part of the 

&lt;a href=&#34;https://www.actuaries.org.uk/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Institute&amp;rsquo;s&lt;/a&gt; exam syllabus.&lt;/p&gt;
&lt;p&gt;As part of this I had been reading about 

&lt;a href=&#34;https://bookdown.org/yihui/blogdown/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;blogdown&lt;/a&gt; which seemed promising and is very well documented. Unfortunately given the complex infrastructure behind the blogdown package (or perhaps that&amp;rsquo;s my excuse for just being dumb), I couldn&amp;rsquo;t get this to work in my preferred text editor, 

&lt;a href=&#34;https://code.visualstudio.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Visual Studio Code&lt;/a&gt; and having the output consistent with the theme I&amp;rsquo;m using (the 

&lt;a href=&#34;https://sourcethemes.com/academic/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Academic&lt;/a&gt; theme).&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;p&gt;Perhaps an additional motiviation was that I enjoy learning new things and this seemed like a good challenge. This website was created in 2020. Around the same time I started to mess around with Blender - see 

&lt;a href=&#34;https://agarbiak.github.io/post/blender/&#34;&gt;this post&lt;/a&gt; for more details.&lt;/p&gt;
&lt;p&gt;I had previously only tried to build a website a couple of times before:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Dabbling with 

&lt;a href=&#34;https://en.wikipedia.org/wiki/Adobe_Dreamweaver&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Dreamweaver&lt;/a&gt; as a kid and not getting very far,&lt;/li&gt;
&lt;li&gt;Building a lottery based website, 

&lt;a href=&#34;https://warwick.ac.uk/services/aro/dar/quality/modules/undergraduate/ib/ib2a5/#content-and-teaching&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Warwick Accumulator Draw &amp;ldquo;WAD&amp;rdquo;&lt;/a&gt; as a university module, which was a lot of fun but a lot of work too. This was built back in early 2011 on 

&lt;a href=&#34;https://en.wikipedia.org/wiki/.NET_Framework_version_history#.NET_Framework_4.0&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Microsoft&amp;rsquo;s .NET framework.&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;I also want to take this opportunity to pass on some career advice. This advice actually comes from my first boss 

&lt;a href=&#34;https://home.kpmg/uk/en/home/contacts/f/mike-froom.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Mike Froom&lt;/a&gt; who offered me a graduate trainee position at 

&lt;a href=&#34;https://home.kpmg/uk/en/home/about/offices/birmingham-1.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;KPMG Birmingham&lt;/a&gt; (which was a great graduate job and would highly recommend). I must quickly add a disclaimer that the quote is paraphrased:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;&lt;em&gt;You should always challenge yourself by trying something new every six months.&lt;/em&gt;&amp;rdquo;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Given the above, it felt like a reasonable challenge to get up and running with a modern day website. So how was this website built and how can you build your own website, for &lt;strong&gt;free&lt;/strong&gt;, hosted on 

&lt;a href=&#34;https://github.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;GitHub&lt;/a&gt;?&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;how-this-site-was-built&#34;&gt;How this site was built&lt;/h2&gt;
&lt;p&gt;So how specifically was this website built? The truth is that it took a fair amount of trial and error and reading plenty of documentation. I am certainly no software developer so I hope this can give anyone the confidence that they can also build their own &lt;strong&gt;100% free&lt;/strong&gt;&lt;sup id=&#34;fnref:2&#34;&gt;&lt;a href=&#34;#fn:2&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;2&lt;/a&gt;&lt;/sup&gt; website.&lt;/p&gt;
&lt;p&gt;Here are the tools I&amp;rsquo;ve used to build this website:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;

&lt;a href=&#34;https://git-scm.com/downloads&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Git&lt;/a&gt; - download and install Git&lt;sup id=&#34;fnref:3&#34;&gt;&lt;a href=&#34;#fn:3&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;3&lt;/a&gt;&lt;/sup&gt; for &lt;strong&gt;free&lt;/strong&gt;,&lt;/li&gt;
&lt;li&gt;

&lt;a href=&#34;https://github.com/gohugoio/hugo/releases&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Hugo&lt;/a&gt; - pick your own operating system&amp;rsquo;s binary release for &lt;strong&gt;free&lt;/strong&gt;,&lt;/li&gt;
&lt;li&gt;

&lt;a href=&#34;https://github.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;GitHub&lt;/a&gt; - set up your own GitHub account for &lt;strong&gt;free&lt;/strong&gt;,&lt;/li&gt;
&lt;li&gt;

&lt;a href=&#34;https://github.com/gcushen/hugo-academic/tree/master&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Academic Theme&lt;/a&gt; - fork the Academic Theme for &lt;strong&gt;free&lt;/strong&gt;,&lt;/li&gt;
&lt;li&gt;

&lt;a href=&#34;https://code.visualstudio.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Visual Studio Code&lt;/a&gt; - download and install Microsoft&amp;rsquo;s text editor for &lt;strong&gt;free&lt;/strong&gt;,&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The specific deployment to host on 

&lt;a href=&#34;https://github.com/agarbiak/agarbiak.github.io&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;GitHub&lt;/a&gt; was based on documentation from 

&lt;a href=&#34;https://sourcethemes.com/academic/docs/deployment/#github-pages&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Academic&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Over time my specific setup has changed:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;I use Windows OS but use a &lt;code&gt;bash&lt;/code&gt; terminal within VS Code.&lt;/li&gt;
&lt;li&gt;Wrote a &lt;code&gt;shell&lt;/code&gt; script to automate deployment which works by:
&lt;ul&gt;
&lt;li&gt;Calling Hugo with no arguments, simply &lt;code&gt;hugo&lt;/code&gt;,&lt;/li&gt;
&lt;li&gt;Copies the Hugo generated &lt;strong&gt;public&lt;/strong&gt; folder (representing the entire static website) into a separate repo,&lt;/li&gt;
&lt;li&gt;Change directory to the other repo and commit the git changes locally,&lt;/li&gt;
&lt;li&gt;Push these to the remote (GitHub repo),&lt;/li&gt;
&lt;li&gt;Change back to the Hugo repo and delete the &lt;strong&gt;public&lt;/strong&gt; folder.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Changes to layout and theming is performed at the root directory, not within the theme folder&lt;/li&gt;
&lt;/ul&gt;
&lt;section class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;The story doesn&amp;rsquo;t end there. Here is some more commentary on the matter.&lt;br&gt;
&lt;br&gt;

&lt;a href=&#34;https://bookdown.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Bookdown&lt;/a&gt; is an excellent resource for anyone interested in &lt;code&gt;R&lt;/code&gt;. Most resources on here are fully published books that are available, for free, in digital format. Specifically, my interest was piqued by the 

&lt;a href=&#34;https://bookdown.org/yihui/blogdown/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;book&lt;/a&gt; hosted on here for the &lt;code&gt;R&lt;/code&gt; package 

&lt;a href=&#34;https://cran.r-project.org/web/packages/blogdown/index.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;blogdown.&lt;/a&gt; The 

&lt;a href=&#34;https://bookdown.org/yihui/blogdown/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;book&lt;/a&gt; advocates using 

&lt;a href=&#34;https://gohugo.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Hugo&lt;/a&gt; to build your statically generated website.&lt;br&gt;
&lt;br&gt;As part of my work at 

&lt;a href=&#34;https://www.hiscox.co.uk/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Hiscox&lt;/a&gt; I occasionally work in &lt;code&gt;R&lt;/code&gt;. My preferred IDE for such work is 

&lt;a href=&#34;https://rstudio.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;R Studio&lt;/a&gt;. &lt;code&gt;R&lt;/code&gt; is fantastic for data - loading, transformation, analysis and visualisation. R Studio is the best IDE for working in &lt;code&gt;R&lt;/code&gt; in my opinion. However, I personally find R Studio a little cumbersome for web development despite the existence of the 

&lt;a href=&#34;https://cran.r-project.org/web/packages/blogdown/index.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;blogdown&lt;/a&gt; package. Due to this I backtracked somewhat to read up on 

&lt;a href=&#34;https://gohugo.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Hugo&lt;/a&gt; documentation. Here I discovered the 

&lt;a href=&#34;https://sourcethemes.com/academic&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Academic&lt;/a&gt; theme, which largely powers the user experience on this website. &lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:2&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;Free as in no monetary purchase is required. However as with everything in life, there are some restrictions. All the tools listed come with a variant of an open-source license (GNU General Public License, Apache, MIT, et. al.) &lt;a href=&#34;#fnref:2&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:3&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;It&amp;rsquo;s pretty terrible I only came across 

&lt;a href=&#34;https://git-scm.com/downloads&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Git&lt;/a&gt; in late 2019. I am still yet to make use of its extensive functionality, but already consider it the most important tool within development. There are plenty of good tutorials you can Google for more help and the 

&lt;a href=&#34;https://git-scm.com/docs&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;git-scm&lt;/a&gt; website is &lt;em&gt;the&lt;/em&gt; reference guide. &lt;a href=&#34;#fnref:3&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/section&gt;
</description>
    </item>
    
  </channel>
</rss>
